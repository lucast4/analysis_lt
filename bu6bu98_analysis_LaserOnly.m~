%%  NO LABEL REQUIRED - USED FOR ANALYSIS OF LEARNING SCREENING
% close all;
% 
% Params.batch='batch';
% Params.config='/bluejay5/lucas/birds/or60/config.evconfig2';
% Params.NoteNum_to_plot=0; % for the note you want to analyze
% [AllSongsData_toplot, AllData] = lt_check_hit_templ_freq_NoLabelRequired(Params);


%% ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
%% ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 % ============ SEAPRATE BATCHES FOR EACH NOTE GROUP

lt_read_ltrec2




%% CHECKING TEMPLATE MATCHING [IGNORE NOTE GROUPS]

clear all; close all;
batchf='batch.labeled.all';
config='/bluejay5/lucas/birds/bu6bu98/config120318.evconfig2';

% ################################## NOTEGROUP0

% === Note 0 (LASER on d)
syl='d';
syl_pre='d';
syl_post='d';
get_WN_hits=1;
get_offline_match=1;
get_FF=0;
NoteNum=0;

check_stuff=lt_check_hit_templ_freq_v2_EvTAFv4Sim(batchf, syl, syl_pre, syl_post, get_WN_hits,get_offline_match,get_FF,config,NoteNum);

% === Note 1 (WN on d(b)) [UP]
syl='b';
syl_pre='d';
syl_post='';
get_WN_hits=1;
get_offline_match=1;
get_FF=1;
NoteNum=1;

check_stuff=lt_check_hit_templ_freq_v2_EvTAFv4Sim(batchf, syl, syl_pre, syl_post, get_WN_hits,get_offline_match,get_FF,config,NoteNum);


% === Note 2 (WN on d(b)) [DN]
syl='h';
syl_pre='db';
syl_post='';
get_WN_hits=1;
get_offline_match=1;
get_FF=1;
NoteNum=2;

check_stuff=lt_check_hit_templ_freq_v2_EvTAFv4Sim(batchf, syl, syl_pre, syl_post, get_WN_hits,get_offline_match,get_FF,config,NoteNum);



%% ====== ALIGNING STIM TO SONG
%% ====== ALIGNING STIM TO SONG
% ========== CHECKING NOTEGROUP 1
close all;
batchf = 'batch.NoteGroup_0.rec_FB'; % either .cbin file or batch
% songf = batchf; % either .cbin file or batch
lasernote = 1;
annotate_note_group = 1;

lt_batchsong_plotallchans(batchf, lasernote, annotate_note_group);


% ============= CHECKIGN NOTEGROUP 2
close all;
batchf = 'batch.NoteGroup_1.rec_FB'; % either .cbin file or batch
% songf = batchf; % either .cbin file or batch
lasernote = 1;
annotate_note_group = 1;

lt_batchsong_plotallchans(batchf, lasernote, annotate_note_group);




%% ##################### METHOD 2 - MORE FLEXIBLE.
%% ##################### METHOD 2 - MORE FLEXIBLE.

% %% calc FF for all syls, save next to song file
% clear all; close all;
% 
% ListOfDirs_ALL = {...
%     '/bluejay5/lucas/birds/pu69wh78/NEURAL/110117_RALMANlearn1'};
% 
% ListOfBatch = {...
%     'BatchAll'};
% 
% FFparams.cell_of_freqwinds={'a', [1000 2600], 'g', [2000 3400], ...
%     'h', [2900 3800], 'b', [2900 3800]}; % 'j', [950 1450], 'l', [1200 1600], 't', [3590 4960]
% FFparams.cell_of_FFtimebins={'a', [0.068 0.078], 'g', [0.04 0.06], ...
%     'h', [0.033 0.042], 'b', [0.033 0.04]}; % 'j', [0.04 0.045], 'l', [0.035 0.039], 't', [0.026 0.033], ...
% 
% plotAllPC = 0;
% plotEachSyl = 0;
% overwrite = 1;
% 
% % ==================== CALCULATE AND SAVE FF
% lt_batchsong_calcFF(ListOfDirs_ALL, ListOfBatch, FFparams, plotAllPC, plotEachSyl, ...
%     overwrite);
% 
% %% ==== EXTRACT FF
% MotifsToExtract = {'(a)b', 'a(b)', 'j(b)', 'ab(h)', 'jb(h)',  'abh(h)', 'jbh(h)', '(g)'};
% DATSTRUCT = lt_batchsong_extractFF(ListOfDirs_ALL, {}, ListOfBatch, MotifsToExtract);
% 
% %% ======= PLOT 
% close all;
% TrainON = '01Nov2017-1402';
% SwitchTimes = {'01Nov2017-2045'};
% subtractMean = 1;
% dozscore = 1;
% 
% lt_batchsong_plotFF(DATSTRUCT, MotifsToExtract, TrainON, SwitchTimes, ...
%     subtractMean, dozscore);
% 







%% ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
%% ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
%% OPTO ANALY ACROSS DAYS
% ================ DO SEPARATELY FOR EACH SYLLABLE OF INTEREST

clear Params_metadata; clear Params_glob;
close all;

% ================== SYL PARAMS CATALOGp
clear Params_bysyl

Params_bysyl(1).SylTarg='b'; % aligns to onset of this
Params_bysyl(1).PreNote='d';
Params_bysyl(1).PreDur=0.05; % sec, how much data to take before targ
Params_bysyl(1).PostSylOnsetDur=0.1; % sec, data post to take
Params_bysyl(1).TargNoteNum=1; % template note directed to target
Params_bysyl(1).PC_freqrange=[3000 4200]; % for both pitch contour and find note
Params_bysyl(1).StimLatencyWindow=[-150, 0]; % [a b] a and b are times (in negative ms) preceding syl onset. If stim is within this window, then will call a "stim trial."
Params_bysyl(1).TimeWindowList{1}=[54 58]; % entire syl
Params_bysyl(1).notenum_stim=0; % of Stim - CONFIRMED THIS WORKS

% Params_bysyl(2).SylTarg='b'; % aligns to onset of this
% Params_bysyl(2).PreNote='c';
% Params_bysyl(2).PreDur=0.05; % sec, how much data to take before targ
% Params_bysyl(2).PostSylOnsetDur=0.1; % sec, data post to take
% Params_bysyl(2).TargNoteNum=-1; % template note directed to target
% Params_bysyl(2).PC_freqrange=[3100 3900]; % for both pitch contour and find note
% Params_bysyl(2).StimLatencyWindow=[-300 0]; % [a b] a and b are times (in negative ms) preceding syl onset. If stim is within this window, then will call a "stim trial."
% Params_bysyl(2).TimeWindowList{1}=[53 61]; % entire syl
% Params_bysyl(2).notenum_stim=3; % of Stim - CONFIRMED THIS WORKS
% 
% Params_bysyl(3).SylTarg='h'; % aligns to onset of this
% Params_bysyl(3).PreNote='cb';
% Params_bysyl(3).PreDur=0.05; % sec, how much data to take before targ
% Params_bysyl(3).PostSylOnsetDur=0.1; % sec, data post to take
% Params_bysyl(3).TargNoteNum=-1; % template note directed to target
% Params_bysyl(3).PC_freqrange=[2800 3800]; % for both pitch contour and find note
% Params_bysyl(3).StimLatencyWindow=[-450, 0]; % [a b] a and b are times (in negative ms) preceding syl onset. If stim is within this window, then will call a "stim trial."
% Params_bysyl(3).TimeWindowList{1}=[54 62]; % entire syl
% Params_bysyl(3).notenum_stim=3;


% ####################### GENERAL PARAMS (shared across sykls)
% =======, to find directories
Params_metadata.experiment='LaserOnly'; % 1st underscore ...
Params_metadata.condition='';
Params_metadata.notes='';
%     Params_metadata.date_range={'28Sep2018', '04Oct2018'};
Params_metadata.date_range={'24Nov2018', '04Dec2018'};
Params_metadata.only_labeled_dirs=1;

% ===== For opto analysis
Params_glob.DataInfo='UnDir'; % To note information about data, 'Dir' and 'UnDir' means this is directed or undirected song.
Params_glob.Fs=32000;

%         STIM
Params_glob.StimDelay=0; % in ms, delay from trigger to stim on
Params_glob.StimDur=250; % duration of Stim, in ms
Params_glob.StimType='pulse'; % either 'constant' or 'pulse'



% Time Window List
% Plotting over time
Params_glob.SmthBin=10; % smooth # rends

% Do you want to delete old opto analysis folder if it exists?
Params_glob.Delete_old_analysis_folder=1;



% ###################### SYL SPECIFIC PARAMS
SepBySyl = 1;
currdir = pwd;
for i=1:length(Params_bysyl)
    
    % ================== WHERE TO ALIGN SONGS
    Params_glob.SylTarg=Params_bysyl(i).SylTarg; % aligns to onset of this
    Params_glob.PreNote=Params_bysyl(i).PreNote;
    Params_glob.PreDur=Params_bysyl(i).PreDur; % sec, how much data to take before targ
    Params_glob.PostSylOnsetDur=Params_bysyl(i).PostSylOnsetDur; % sec, data post to take
    Params_glob.TargNoteNum=Params_bysyl(i).TargNoteNum; % template note directed to target
    Params_glob.PC_freqrange=Params_bysyl(i).PC_freqrange; % for both pitch contour and find note
    Params_glob.StimLatencyWindow=Params_bysyl(i).StimLatencyWindow; % [a b] a and b are times (in negative ms) preceding syl onset. If stim is within this window, then will call a "stim trial."
    Params_glob.TimeWindowList=Params_bysyl(i).TimeWindowList; % entire syl
    Params_glob.notenum_stim=Params_bysyl(i).notenum_stim;
    
    % ================================== DEFAULTS, UNLIKELY TO NEED TO CHANGE
    Params_glob.TargTrigCatchRate=0; % catch trial fraction at target
    Params_glob.pc_harms=1;
    
    
    % =============================== RUN
    KeepOutliers=1; % for running stats and plotting.
    lt_Opto_Stim_analy_SUMMARY_MultDayAnaly_v3(Params_metadata, Params_glob, ...
        KeepOutliers, SepBySyl);
    
    cd(currdir);
end

%% ==================== PLOT ACROSS DAYS
close all;
clear all;

% ==== Params for analysis
BirdDir='/bluejay5/lucas/birds/bu6bu98/';
TimeFieldsOfInterest = 1; % i.e. time windows in pitch contour
statfield='ffvals';
BaselineDays=1;
plotStimEpochs=0; % if 1, then separates all data to stim epochs (even if multiple in one day)
ListOfDirs1={};
ListOfDirs2={};
SepBySyl =1;
syllist = {'d_b'};
sylthis = 'd_b';

% ==== METHOD 2) METADATA automatically
MetadataStruct=lt_metadata_collect;

experiment = 'LaserOnly';
condition='';
notes='';
date_range={'06Dec2018', '19Dec2018'};
only_labeled_dirs=1;

ListOfDirs2=lt_metadata_find_dirs(MetadataStruct, experiment, condition, notes, date_range, only_labeled_dirs);

% get the correct subdir that contains opto stats
c=1;
for i=1:length(ListOfDirs2)
    cd(ListOfDirs2{i});
    
    
    tmp=[];
    try
        cd lt_Opto_Stim_analy_v2
        try cd 'All';
            tmp='All';
        catch err
            try cd 'Stim';
                tmp='Stim';
            end
        end
    catch err
        disp(['error - no lt_Opto_Stim_analy_v2 data on: ' ListOfDirs2{i} ' - throwing day out']);
    cd(BirdDir);        
        continue
    end
    
    % go back up to main dir
    cd(BirdDir);
    
    % modify name to add opto analysis name
    if SepBySyl==1
        ListOfDirs2_modified{c}=[ListOfDirs2{i} '/lt_Opto_Stim_analy_v2/' tmp '/' sylthis];
    else
    ListOfDirs2_modified{c}=[ListOfDirs2{i} '/lt_Opto_Stim_analy_v2/' tmp];
    end
    c=c+1;
end


% ===== COMBINE DIRS
ListOfDirs_all=[ListOfDirs1 ListOfDirs2_modified];

MetaParams.WNonDates = {}; % times when WN epochs began


lt_Opto_Stim_analy_SUMMARY_PlotOverTime(BirdDir, ListOfDirs_all,TimeFieldsOfInterest, ...
    statfield,BaselineDays,plotStimEpochs, MetaParams)



%% ########################################################################
%% ######################################### AUTOLABEL
%% ================ TeSTING CONFIG FILE
if (0)
    close all;
    batchf= 'BatchAll.LABELED';
    get_WN_hits=0;
    get_offline_match=1;
    get_FF=0;
    
    syl = 'b';
    syl_pre = 'ab';
    syl_post = '';
    % config= '/bluejay3/lucas/birds/pu53wh88/config.evconfig2'; % before 2/16 templ change
    config= '/bluejay5/lucas/birds/pu53wh88/config_AL_aB.evconfig2';
    NoteNum = 0;
    
    
    check_stuff=lt_check_hit_templ_freq_v2_EvTAFv4Sim(batchf, syl, syl_pre, ...
        syl_post, get_WN_hits, get_offline_match, get_FF, config, NoteNum);
end

% ================ TeSTING CONFIG FILE
if (0)
    close all;
    batchf= 'BatchAll.LABELED';
    get_WN_hits=0;
    get_offline_match=1;
    get_FF=0;
    
    syl = 'b';
    syl_pre = 'c';
    syl_post = '';
    % config= '/bluejay3/lucas/birds/pu53wh88/config.evconfig2'; % before 2/16 templ change
    config= '/bluejay5/lucas/birds/pu53wh88/config_AL_cB.evconfig2';
    NoteNum = 0;
    
    
    check_stuff=lt_check_hit_templ_freq_v2_EvTAFv4Sim(batchf, syl, syl_pre, ...
        syl_post, get_WN_hits, get_offline_match, get_FF, config, NoteNum);
end



%% ##################################### AUTOLABEL 
clear all; close all;

% ========================= 0) ECTRACT DIRECTORIRES
basedir = '/bluejay5/lucas/birds/bu6bu98';
date_range_base={};
% date_range_WN={'26Oct2018','26Oct2018'};
date_range_WN={'06Dec2018','19Dec2018'};
experiment = 'LaserOnly';

% -------- COLLECT METADAT
cd(basedir);
MetadataStruct=lt_metadata_collect;

condition='';
notes='';
only_labeled_dirs=0;

% ----- BASELINE
ListOfDirs1=lt_metadata_find_dirs(MetadataStruct, experiment, condition, ...
    notes, date_range_base, only_labeled_dirs, 2);

% ------ WN
ListOfDirs2=lt_metadata_find_dirs(MetadataStruct, experiment, condition, ...
    notes, date_range_WN, only_labeled_dirs, 2);

% ------- COMBINE
if ~isempty(date_range_base) & ~isempty(date_range_WN)
ListOfDirs = [ListOfDirs1 ListOfDirs2];
elseif isempty(date_range_base) 
    ListOfDirs = [ListOfDirs2];
elseif isempty(date_range_WN) 
    ListOfDirs = [ListOfDirs1];
end
% ListOfDirs = [ListOfDirs2];


% ============================== RUN, ITERATE OVER DAYS
for j=1:length(ListOfDirs)

    % ==================== 0) go to day folder
    cd([basedir '/' ListOfDirs(j).dirname]);
    
    % ==================== 1) extract all s
%     try
%     lt_make_batch(1);
%     batch = 'batch.keep';
%     catch err
%         lt_make_batch(3);
%         lt_cleandirAuto('batch', 1000,4,4);
%         batch = 'batch.keep';
lt_make_batch(4);
batch = 'batch.rec_FB';
%     end
    
    % ==================== 2) move old .notmat
    if ~exist('OLDNOTMAT_SeqDepPitch', 'dir')
        mkdir OLDNOTMAT_SeqDepPitch
        !cp *.not.mat* OLDNOTMAT_SeqDepPitch
    else
        disp('not making OLDNOTMAT_SeqDepPitch, since already made!!');
    end
    
    % ==================== 3) run autolabel
    % ---- GENERAL PARAMS
    ampThresh=20000;
    min_dur=30;
    min_int=4;
    sm_win = 6;
    
    % ---- MOTIF 1 [ddd]
%     config= '/bluejay5/lucas/birds/bu6bu98/config_AL_d3.evconfig2';
    config= '/bluejay5/lucas/birds/bu6bu98/config_AL_d3_v2.evconfig2';
    syl.targ='d';
    syl.pre='dd';
    syl.post='bh';
    NoteNum=0;
    overwrite_notmat=1; % will always make backup folder
    
    [fnames, sylnum, vlsorfn, vlsorind]=lt_autolabel_EvTAFv4(batch, config, ...
        syl, NoteNum, ampThresh, min_dur, min_int, overwrite_notmat, [], sm_win);
    
    
    % ------ MOTIF 2 [accBb]
    config= '/bluejay5/lucas/birds/bu6bu98/config_AL_c1.evconfig2';
    syl.targ='c';
    syl.pre='g';
    syl.post='cbh';
    NoteNum=0;
    overwrite_notmat=0; % will always make backup folder
    
    [fnames, sylnum, vlsorfn, vlsorind]=lt_autolabel_EvTAFv4(batch, config, ...
        syl, NoteNum, ampThresh, min_dur, min_int, overwrite_notmat, [], sm_win);

end

cd(basedir);


%% ============ MAKE WAVE FILES TO LOOK FOR FALSE POSITIVES
batch = 'batch.labeled.all';
syl = 'b';
presyl = 'd';
[fnames, sylnum]=lt_jc_chcklbl(batch, syl, 0.025,0.025, presyl,'','');
[vlsorfn vlsorind]=jc_vlsorfn(batch, syl, presyl,'');

batch = 'batch.labeled.all';
syl = 'h';
presyl = 'd';
[fnames, sylnum]=lt_jc_chcklbl(batch, syl, 0.025,0.025, presyl,'','');
[vlsorfn vlsorind]=jc_vlsorfn(batch, syl, presyl,'');

% syl = 'd';
% presyl = 'dd';
% [fnames, sylnum]=lt_jc_chcklbl(batch, syl, 0.025,0.025, presyl,'','');
% [vlsorfn vlsorind]=jc_vlsorfn(batch, syl, presyl,'');

syl = 'b';
presyl = 'c';
[fnames, sylnum]=lt_jc_chcklbl(batch, syl, 0.025,0.025, presyl,'','');
[vlsorfn vlsorind]=jc_vlsorfn(batch, syl, presyl,'');
 
%% ============ 2) Use evsonganaly manually on the .wav file created above
% (contains only the syls you chose)
% INSTRUCTIONS: 
% 1) open .wav file using evsonganaly
% 2) change threshold to segment all syls indivudally
% 3) any syl labeled "-" (default) will remain unchanged (i.e. will stay autolabeled). 
%     give a new label to any mislabeled syl - that will be its new actual label
evsonganaly


%% ============ 3) Replace hand-checekd mislabeld syls 
lt_autolabel_FixHandCheckedSyls(fnames, sylnum, vlsorfn, vlsorind)

